# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python. We will be using it extensively in this course.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing

[pytest]
log_cli_level=WARNING

[tox]
envlist = test_app, typechecks, stylechecks, lint
skipsdist = True

[testenv]
install_command = pip install {opts} {packages}

[testenv:test_app]
deps =
	-rtest_requirements.txt

setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

commands=
	pytest \
	-vv \
	{posargs:app/tests/}

[testenv:run]
envdir = {toxworkdir}/test_app
deps =
	{[testenv:test_app]deps}

setenv =
	{[testenv:test_app]setenv}

commands=
	python app/main.py


[testenv:typechecks]
envdir = {toxworkdir}/test_app

deps =
	{[testenv:test_app]deps}

commands = {posargs:mypy app}


[testenv:stylechecks]
envdir = {toxworkdir}/test_app

deps =
	{[testenv:test_app]deps}

commands = {posargs:flake8 app}


[testenv:lint]
envdir = {toxworkdir}/test_app

deps =
	{[testenv:test_app]deps}

commands =
	isort app
	black app

[flake8]
exclude = .git,__pycache__,__init__.py,.mypy_cache,.pytest_cache,.venv,alembic
max-line-length = 88